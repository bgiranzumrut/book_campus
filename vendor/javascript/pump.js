// pump@3.0.2 downloaded from https://ga.jspm.io/npm:pump@3.0.2/index.js

import*as r from"once";import*as t from"end-of-stream";import*as a from"fs";import e from"process";var n=r;try{"default"in r&&(n=r.default)}catch(r){}var o=t;try{"default"in t&&(o=t.default)}catch(r){}var f=a;try{"default"in a&&(f=a.default)}catch(r){}var i={};var u=e;var c=n;var s=o;var v;try{v=f}catch(r){}var noop=function(){};var l=/^v?\.0/.test(u.version);var isFn=function(r){return typeof r==="function"};var isFS=function(r){return!!l&&(!!v&&((r instanceof(v.ReadStream||noop)||r instanceof(v.WriteStream||noop))&&isFn(r.close)))};var isRequest=function(r){return r.setHeader&&isFn(r.abort)};var destroyer=function(r,t,a,e){e=c(e);var n=false;r.on("close",(function(){n=true}));s(r,{readable:t,writable:a},(function(r){if(r)return e(r);n=true;e()}));var o=false;return function(t){if(!n&&!o){o=true;if(isFS(r))return r.close(noop);if(isRequest(r))return r.abort();if(isFn(r.destroy))return r.destroy();e(t||new Error("stream was destroyed"))}}};var call=function(r){r()};var pipe=function(r,t){return r.pipe(t)};var pump=function(){var r=Array.prototype.slice.call(arguments);var t=isFn(r[r.length-1]||noop)&&r.pop()||noop;Array.isArray(r[0])&&(r=r[0]);if(r.length<2)throw new Error("pump requires two streams per minimum");var a;var e=r.map((function(n,o){var f=o<r.length-1;var i=o>0;return destroyer(n,f,i,(function(r){a||(a=r);r&&e.forEach(call);if(!f){e.forEach(call);t(a)}}))}));return r.reduce(pipe)};i=pump;var m=i;export{m as default};

